{"version":3,"sources":["images/1F60D_color.png","images/1F62A_color.png","images/1F603_color.png","images/1F624_color.png","spotify-icons-logos/icons/02_CMYK/02_PNG/Spotify_Icon_CMYK_White.png","components/LovingFace.jsx","components/SadFace.jsx","components/HappyFace.jsx","components/AngryFace.jsx","components/Header.jsx","components/PlaylistForm.jsx","components/Checkbox.jsx","components/MoodForm.jsx","components/GoButton.jsx","components/LogInButton.jsx","components/Alert.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","LovingFace","src","Heart","width","Component","SadFace","Sad","HappyFace","Happy","AngryFace","Angry","Title","styled","div","Head","props","isMobile","TitleBold","TitleNotBold","Description","FaceWrapper","Wrapper","Header","this","loggedIn","Form","select","Option","option","Label","PlaylistForm","state","value","handleChange","bind","event","handlePlaylistChange","onChange","name","titles","map","item","id","Input","input","Checkbox","type","checked","Text","span","Heading","MoodForm","checkedItems","Map","e","handleMoodChange","moods","get","React","button","GoButton","onClick","LogIn","a","LogInButton","alt","BlackAndWhiteLogo","style","href","alert","Button","Alert","handleAlertChange","window","location","reload","spotifyWebAPI","SpotifyWebAPI","FormWrapper","key","label","App","params","getHashParams","access_token","setAccessToken","userID","getUsername","playlists","selectedPlaylistSongs","chosenPlaylist","numCreated","getSavedSongs","updateWindowDimensions","getPlaylists","addEventListener","removeEventListener","innerWidth","setState","hashParams","r","q","hash","substring","exec","decodeURIComponent","getMe","then","response","limit","offset","getUserPlaylists","playlist","console","log","total","items","concat","length","tracks","getMySavedTracks","song","track","uri","playlistID","result","find","obj","numCalls","Math","ceil","idCalls","i","push","Promise","all","index","getPlaylistTracks","arr","sortSongs","songIDs","hundred","songID","getAudioFeaturesForTracks","mood","chillURIs","hypeURIs","goodVibesURIs","bagURIs","audio_features","energy","danceability","valence","moodNames","createPlaylist","description","bagURI","addTracksToPlaylist","hypeURI","goodVibesURI","chillURI","target","isChecked","prevState","set","options","selectedIndex","innerHTML","getPlaylistSongs","className","goButtonClicked","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16868523.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1F60D_color.cc9d9dcd.png\";","module.exports = __webpack_public_path__ + \"static/media/1F62A_color.0917a201.png\";","module.exports = __webpack_public_path__ + \"static/media/1F603_color.1ec848d8.png\";","module.exports = __webpack_public_path__ + \"static/media/1F624_color.731f977d.png\";","module.exports = __webpack_public_path__ + \"static/media/Spotify_Icon_CMYK_White.d0d7f784.png\";","import React, { Component } from 'react';\nimport Heart from '../images/1F60D_color.png';\n\nclass LovingFace extends Component {\n    render() {\n        return(\n            <img src = {Heart} width = \"70px\" />\n        );\n    }\n}\n\nexport default LovingFace;","import React, { Component } from 'react';\nimport Sad from '../images/1F62A_color.png';\n\nclass SadFace extends Component {\n    render() {\n        return(\n            <img src = {Sad} width = \"70px\" />\n        );\n    }\n}\n\nexport default SadFace;","import React, { Component } from 'react';\nimport Happy from '../images/1F603_color.png';\n\nclass HappyFace extends Component {\n    render() {\n        return(\n            <img src = {Happy} width = \"70px\" />\n        );\n    }\n}\n\nexport default HappyFace;","import React, { Component } from 'react';\nimport Angry from '../images/1F624_color.png';\n\nclass AngryFace extends Component {\n    render() {\n        return(\n            <img src = {Angry} width = \"70px\" />\n        );\n    }\n}\n\nexport default AngryFace;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LovingFace from './LovingFace.jsx';\nimport SadFace from './SadFace.jsx';\nimport HappyFace from './HappyFace.jsx';\nimport AngryFace from './AngryFace.jsx';\n\n//animate the title\n\nconst Title = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    font-size: 45px;\n    padding-bottom: 5px;\n`;\n\nconst Head = styled.div`\n    display: flex;\n    flex-direction: ${props => props.isMobile ? \"column\" : \"row\" };\n    align-items: center;\n`;\n\nconst TitleBold = styled.div`\n    font-weight: 800;\n`;\n\nconst TitleNotBold = styled.div``;\n\nconst Description = styled.div`\n    font-size: 18px;\n    padding-bottom: ${props => props.isMobile ? \"0px\" : \"5px;\" };\n`;\n\nconst FaceWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    font-family: Arial;\n    font-style: italic;\n`;\n\nclass Header extends Component {\n    render() {\n        if(this.props.loggedIn) {\n            return(\n                <Wrapper>\n                    <Head isMobile = {this.props.isMobile}>\n                        <FaceWrapper><HappyFace /><LovingFace /></FaceWrapper>\n                        <Title><TitleBold>mood</TitleBold><TitleNotBold>-sort</TitleNotBold></Title>\n                        <FaceWrapper><AngryFace /><SadFace /></FaceWrapper>\n                    </Head>\n                    <Description>sort large, unkept playlists into smaller playlists by mood</Description>\n                </Wrapper>\n            );\n        } else {\n            return(\n                <Wrapper>\n                    <Head isMobile = {this.props.isMobile}>\n                        <FaceWrapper><HappyFace /><LovingFace /></FaceWrapper>\n                        <Title><TitleBold>mood</TitleBold><TitleNotBold>-sort</TitleNotBold></Title>\n                        <FaceWrapper><AngryFace /><SadFace /></FaceWrapper>\n                    </Head>\n                    <Description>sort large, unkept playlists into smaller playlists by mood</Description>\n                    <br></br><br></br>\n                    <Description>log into spotify to get started</Description>\n                </Wrapper>\n            );\n        }\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: ${props => props.isMobile ? \"0px\" : \"10px\" };\n  margin-bottom: 15px;\n  margin-right: 100px;\n`;\n\nconst Form = styled.select`\n  cursor: pointer;\n  border-radius: 10px;\n  padding: 5px;\n  background-color: #BBBEFF;\n  width: 140px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  font-size: 14px;\n  :focus {\n    outline: none;\n  }\n`;\n\nconst Option = styled.option`\n  cursor: pointer;\n  background-color: #BBBEFF;\n  border-radius: 10px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  font-size:  14px;\n  `;\n\nconst Label = styled.div`\n  margin-bottom: 10px;\n`;\n\nclass PlaylistForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.handlePlaylistChange(event);\n    }\n\n    render() {\n        return (\n          <Wrapper isMobile = {this.props.isMobile}>\n                <Label>Choose One of Your Playlists to Sort:</Label>\n                <Form value={this.props.value} onChange={this.handleChange}>\n                  <Option value = ''>Choose a Playlist</Option>\n                  <Option name = \"liked\" value=\"liked\">Liked Songs</Option>\n                  {this.props.titles.map(item => (\n                    <Option name = {item.name} value = {item.id}>{item.name}</Option>\n                 ))}\n                </Form>\n          </Wrapper>\n          );\n    }\n}\n\nexport default PlaylistForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n    cursor: pointer;\n    height: 20px;\n    width: 20px;\n    :hover {\n        background-color: #BBBEFF;\n    }\n`;\n\nconst Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) => (\n  <Input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nCheckbox.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default Checkbox;","import React from 'react';\nimport Checkbox from './Checkbox.jsx';\nimport styled from 'styled-components';\n  \nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n`;\n\nconst Text = styled.span`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n`;\n\nconst Heading = styled.div`\n\n`;\n\nclass MoodForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedItems: new Map(),\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.handleMoodChange(e);\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Heading>Choose the Moods You Want Your Playlist Sorted Into:</Heading>\n        {\n          this.props.moods.map(item => (\n            <Label>\n              <Checkbox name={item.name} checked={this.props.checkedItems.get(item.name)} onChange={this.handleChange} />\n              <Text>{item.name}</Text>\n            </Label>\n          ))\n        }\n      </Wrapper>\n    );\n  }\n}\n\nexport default MoodForm;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.button`\n    cursor: pointer;\n    display: flex;\n    padding: 10px;\n    justify-content: center;\n    align-items: center;\n    background-color: #424FFF;\n    width: 200px;\n    border-radius: 20px;\n    color: white;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    font-size: 16px;\n    margin-bottom: 20px;\n    :focus {\n        outline: none;\n      }\n    `;\n\nclass GoButton extends Component {\n    render() {\n        return(\n            <Wrapper onClick = {this.props.onClick}>\n                Sort Your Playlists!\n            </Wrapper>\n        );\n    }\n}\n\nexport default GoButton;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport BlackAndWhiteLogo from '../spotify-icons-logos/icons/02_CMYK/02_PNG/Spotify_Icon_CMYK_White.png';\n\n\nconst LogIn = styled.a`\n    color: white;\n    text-decoration: none;\n    padding-left: 15px;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    padding: 10px;\n    justify-content: center;\n    align-items: center;\n    background-color: #424FFF;\n    width: 200px;\n    border-radius: 20px;\n`;\n\nclass LogInButton extends Component {\n    render() {\n        return(\n            <Wrapper>\n                <img alt = \"spotify logo\" src = {BlackAndWhiteLogo} style = {{ width: 30 }} />\n                <LogIn href = '/login'>Log in to Spotify</LogIn>\n                {/* http://localhost:8888/login */}\n            </Wrapper>\n        );\n    }\n}\n\nexport default LogInButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    display: ${props => props.alert ? \"flex\" : \"none\" };\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    padding: 10px;\n    width: 50%;\n    background-color: #424FFF;\n    border-radius: 15px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n`;\n\nconst Text = styled.div`\n    padding-bottom: 10px;\n`;\n\nconst Button = styled.button`\n    cursor: pointer;\n    color: white;\n    background-color: #424FFF;\n`;\n\nclass Alert extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.handleAlertChange(e);\n    window.location.reload(false);\n  }\n\n  render() {\n    return (\n      <Wrapper alert = {this.props.alert}>\n        <Text>Check You Spotify Account!</Text>\n        <Button onClick = {this.handleChange}>Close</Button>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Alert;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport Header from './components/Header.jsx';\nimport PlaylistForm from './components/PlaylistForm.jsx';\nimport MoodForm from './components/MoodForm.jsx';\nimport GoButton from './components/GoButton.jsx';\nimport LogInButton from './components/LogInButton.jsx';\nimport Alert from './components/Alert.jsx';\n\n\nconst spotifyWebAPI = new SpotifyWebAPI();\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  margin: ${props => props.isMobile ? \"20px\" : \"50px\" };\n`;\n\nconst FormWrapper = styled.div`\n    display: flex;\n    flex-direction: ${props => props.isMobile ? \"column\" : \"row\" };\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    margin: ${props => props.isMobile ? \"5px\" : \"50px\" };\n`;\n\nvar moods = [\n  {\n    name: 'good vibes',\n    key: 1,\n    label: 'good vibes',\n  },      \n  {\n    name: 'chill',\n    key: 2,\n    label: 'chill',\n  },   \n  {\n    name: 'sad',\n    key: 3,\n    label: 'bag',\n  },   \n  {\n    name: 'hype',\n    key: 4,\n    label: 'hype',\n  },   \n]\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    if(params.access_token) {\n      spotifyWebAPI.setAccessToken(params.access_token);\n    }\n\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      userID: this.getUsername(),\n      playlists: [],\n      selectedPlaylistSongs: [],\n      moods: new Map(), \n      chosenPlaylist: {},\n      numCreated: 0,\n      alert: false,\n      isMobile: false\n    }\n\n    this.handleMoodChange = this.handleMoodChange.bind(this);\n    this.handlePlaylistChange = this.handlePlaylistChange.bind(this);\n    this.handleAlertChange = this.handleAlertChange.bind(this); //in the middle of adding this\n    this.getSavedSongs = this.getSavedSongs.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPlaylists(50, 0);\n    this.getSavedSongs(50, 0);\n\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  updateWindowDimensions() {\n    if(window.innerWidth < 725) this.setState({ isMobile: true });\n    else this.setState({ isMobile: false });\n  }\n  \n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  } \n\n  getUsername() {\n    spotifyWebAPI.getMe()\n      .then((response) => {\n        this.setState({\n          userID: response.id\n        })\n      })\n  }\n\n  getPlaylists(limit, offset) {\n    spotifyWebAPI.getUserPlaylists({ limit: limit , offset: offset })\n      .then((response) => {\n        console.log(response.total);\n        var playlist;\n        for(playlist of response.items) {\n            this.setState(state => {\n              const playlists = state.playlists.concat({ \n                name: playlist.name, \n                id: playlist.id,\n                length: playlist.tracks.total\n            });\n            return {\n              playlists\n            }\n          })\n        }\n        if(this.state.playlists.length < response.total) this.getPlaylists(limit, offset + limit); \n      })\n  }\n\n  getSavedSongs(limit, offset) {\n    spotifyWebAPI.getMySavedTracks({limit: limit, offset: offset})\n      .then((response) =>{\n        var song;\n        for(song of response.items) {\n          this.setState(state => {\n            const selectedPlaylistSongs = state.selectedPlaylistSongs.concat({ \n              name: song.track.name, \n              uri: song.track.uri,\n              id: song.track.id,\n            });\n\n            return {\n              selectedPlaylistSongs\n            }\n          })\n        }\n\n        if(this.state.selectedPlaylistSongs.length < response.total) this.getSavedSongs(limit, offset + limit); \n      })\n  }\n\n    getPlaylistSongs(playlistID) {\n    var result = this.state.playlists.find(obj => {\n      return obj.id === playlistID;\n    })\n    var numCalls = Math.ceil(result.length / 100);\n    var idCalls = [];\n\n    for(var i = 0; i < numCalls; i++) {\n      idCalls.push(playlistID);\n    }\n    \n    Promise.all(idCalls.map((playlistID, index) =>\n    spotifyWebAPI.getPlaylistTracks('', playlistID, {offset: index * 100})))\n      .then((response) =>{\n        var song;\n        var arr;\n        for(arr of response) {\n        for(song of arr.items) {\n          this.setState(state => {\n            const selectedPlaylistSongs = state.selectedPlaylistSongs.concat({ \n              name: song.track.name, \n              uri: song.track.uri,\n              id: song.track.id,\n            });\n\n            return {\n              selectedPlaylistSongs\n            }\n          })\n        }\n      }\n        this.sortSongs();\n      })\n  }\n\n  sortSongs() { \n    var songIDs = [[]];\n    var song;\n    var hundred = 0;\n\n    for(song of this.state.selectedPlaylistSongs) {\n      if(songIDs[hundred].length === 100) {\n        hundred += 1;\n        songIDs.push([]);\n      }\n      songIDs[hundred].push(song.id);\n    }\n\n      Promise.all(songIDs.map(songID =>\n        spotifyWebAPI.getAudioFeaturesForTracks(songID)))\n        .then((response) => {\n          console.log(response);\n          var song;\n          var arr;\n          var mood;\n\n          var chillURIs = [[]];\n          var hypeURIs = [[]];\n          var goodVibesURIs = [[]];\n          var bagURIs = [[]];\n\n          for(arr of response) {\n            for(song of arr.audio_features) {\n            //console.log(song.name, \" Tempo \", response.tempo, \" Energy \", response.energy, \" Dancability \", response.danceability, \" Valence \", response.valence);\n            if(song.energy > .80 || song.danceability > .80) mood = \"hype\";\n            else if((song.energy > .65 && song.danceability > .50) && song.valence > .40) mood = \"good vibes\";\n            else if(song.valence < .50 && song.energy < .50 ) mood = \"bag\"\n            else mood = \"chill\";\n\n            if(mood === 'chill') {\n              if(chillURIs[chillURIs.length - 1].length === 100) {\n                chillURIs.push([]);\n              }\n              chillURIs[chillURIs.length - 1].push(song.uri);\n            } else if(mood === 'good vibes') {\n              if(goodVibesURIs[goodVibesURIs.length - 1].length === 100) {\n                goodVibesURIs.push([]);\n              }\n              goodVibesURIs[goodVibesURIs.length - 1].push(song.uri);\n            } else if(mood === 'bag') {\n                if(bagURIs[bagURIs.length - 1].length === 100) {\n                  bagURIs.push([]);\n                }\n                bagURIs[bagURIs.length - 1].push(song.uri);\n            } else if(mood === 'hype') {\n              if(hypeURIs[hypeURIs.length - 1].length === 100) {\n                hypeURIs.push([]);\n              }\n              hypeURIs[hypeURIs.length - 1].push(song.uri);\n            }\n          }\n        }\n\n          var moodNames = [];\n\n          for(mood of this.state.moods) {\n            if(mood[1]) {\n              moodNames.push(mood[0]);\n            }\n          }\n\n          moodNames.map(mood => {\n          spotifyWebAPI.createPlaylist(this.state.userID, {name: mood + \" songs of \" + this.state.chosenPlaylist.name, description: \"Created by mood-sort from \" + this.state.chosenPlaylist.name + \" playlist\"})\n            .then((response) =>{\n              if(mood === 'sad' && bagURIs[0].length !== 0) {\n                bagURIs.map(bagURI => {\n                spotifyWebAPI.addTracksToPlaylist('', response.id, bagURI)});\n              } else if(mood === 'hype' && hypeURIs[0].length !== 0) {\n                hypeURIs.map(hypeURI => {\n                spotifyWebAPI.addTracksToPlaylist('', response.id, hypeURI)});\n              } else if(mood === 'good vibes' && goodVibesURIs[0].length !== 0) {\n                goodVibesURIs.map(goodVibesURI => {\n                spotifyWebAPI.addTracksToPlaylist('', response.id, goodVibesURI)});\n              } else if(mood === 'chill' && chillURIs[0].length !== 0) {\n                chillURIs.map(chillURI => {\n                spotifyWebAPI.addTracksToPlaylist('', response.id, chillURI)});\n              }\n              this.setState({ alert: true });\n            })\n        })\n      })\n  }\n\n  handleMoodChange(e) {\n      const item = e.target.name;\n      const isChecked = e.target.checked;\n      this.setState(prevState => ({ moods: prevState.moods.set(item, isChecked) }));\n  }\n\n  handlePlaylistChange(e) {\n    const {options, selectedIndex} = e.target;\n    this.setState( { chosenPlaylist: {name: options[selectedIndex].innerHTML, id: e.target.value }} );\n  }\n\n  handleAlertChange(e) {\n    this.setState( { alert: !this.state.alert } );\n  }\n\n  goButtonClicked() {\n      if(this.state.chosenPlaylist.id === 'liked') {\n        this.sortSongs();\n      } else {\n        this.setState({selectedPlaylistSongs: []});\n        this.getPlaylistSongs(this.state.chosenPlaylist.id);\n      }\n  }\n\n  render() {\n    if(this.state.loggedIn) {\n      return (\n        <div className=\"App\">\n          <Wrapper isMobile = {this.state.isMobile}>\n            <Header loggedIn = {true} isMobile = {this.state.isMobile} />\n            <FormWrapper isMobile = {this.state.isMobile}>\n              <PlaylistForm \n                titles = {this.state.playlists} \n                handlePlaylistChange = {this.handlePlaylistChange} \n                value = {this.state.chosenPlaylist.id} \n                isMobile = {this.state.isMobile}\n                />\n              <MoodForm \n                moods = {moods} \n                handleMoodChange = {this.handleMoodChange} \n                checkedItems = {this.state.moods} /> \n            </FormWrapper>\n            <Alert handleAlertChange = {this.handleAlertChange} alert = {this.state.alert} />\n            <GoButton onClick = {() => this.goButtonClicked()} />\n          </Wrapper>\n        </div>\n      );\n    } else {\n        return (\n          <Wrapper className=\"App\">\n            <Header loggedIn = {false} isMobile = {this.state.isMobile} />\n            <LogInButton />\n          </Wrapper>\n        );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}